- name: PROVISION VPC SUBNETS & F5 INSTANCES
  hosts: localhost
  connection: local
  gather_facts: no

  environment:
    AWS_ACCESS_KEY_ID: "{{ ec2_access_key }}"
    AWS_SECRET_ACCESS_KEY: "{{ ec2_secret_key }}"
    AWS_REGION: "{{ aws_region }}"

#------------------------------------------------------------------------------
# Set variables 
#------------------------------------------------------------------------------
  
  # You need to create a file named aws_creds.yaml (update path below) with the following variables:
  #
  #  ec2_access_key: "--your-key-here--"
  #  ec2_secret_key: "--your-secret-here--"
  #
  vars_files:
    - ../../creds/aws_creds.yaml
  

  vars:


  # SSH
    # This is the name of the SSH private key object in AWS
    sshKey: "EUIRE"
    # This is the path to your local SSH private key located on your computer
    sshKeyPath:

  # AWS settings
    
    uk_se_name: Col
    stack_name: F5-Col-LAB
    aws_region: eu-west-1

    vpc_name: "col_ansible_cft_demo"
    vpc_cidr: "10.3.0.0/16"
    vpc_subnets:
      mgmt_a:
        cidr: 10.3.1.0/24
        az: "{{ aws_region }}a"
      traffic_a:
        cidr: 10.3.11.0/24
        az: "{{ aws_region }}a"



#------------------------------------------------------------------------------
# End variables
#------------------------------------------------------------------------------

  # Start tasks

  tasks:

  # VPC and Subnets

  - name: CREATE VPC
    ec2_vpc_net:
      name: "{{ vpc_name }}"
      cidr_block: "{{ vpc_cidr }}"
      region: "{{ aws_region }}"
      state: present
    register: create_vpc


  - name: "SET FACT: VPC ID"
    set_fact:
      vpc_id: "{{ create_vpc.vpc.id }}"
  

  - name: CREATE VPC SUBNETS
    ec2_vpc_subnet:
      vpc_id: "{{ vpc_id }}"
      cidr: "{{ item.value.cidr }}"
      az: "{{ item.value.az }}"
      tags:
        Name: "{{ item.key }}"
      state: present
    with_dict: "{{ vpc_subnets }}"
    register: create_vpc_subnets


  - name: "COLLECT SUBNET FACTS"
    ec2_vpc_subnet_facts:
      filters:
        vpc-id: "{{ vpc_id }}"
    register: vpc_subnet_facts


  - name: "SET FACT: VPC SUBNET IDS"
    set_fact:
      vpc_subnet_ids: "{{ vpc_subnet_ids | default({}) | combine({ (item.tags.Name | default('default')): item.id }) }}"
    loop: "{{ vpc_subnet_facts.subnets }}"


  - name: CREATE INTERNET GATEWAY
    ec2_vpc_igw:
      vpc_id: "{{ vpc_id }}"
      state: present
    register: create_gateway


  - name: "SET FACT: GATEWAY ID"
    set_fact:
      vpc_gateway_id: "{{ create_gateway.gateway_id }}"
 

  # public route table that routes through the internet gateway -- attach it to our three public subnets
  - name: CREATE ROUTE TABLE FOR PUBLIC SUBNETS
    ec2_vpc_route_table:
      vpc_id: "{{ vpc_id }}"
      state: present
      tags:
        Name: "{{ vpc_name }}-public"
      subnets:
        - "{{ vpc_subnet_ids.mgmt_a }}"
      routes:
        - dest: 0.0.0.0/0
          gateway_id: "{{ vpc_gateway_id }}"


  - name: DEBUG ALL VARS
    debug:
      msg: "{{ vars }}"


  - name: CREATE ANSIBLE CFT DEPLOYMENT
    cloudformation:
      stack_name: "ansible-cft-failover-samenet-api-exist-payg"
      state: present
      region: "eu-west-2"
      disable_rollback: true
      template_url: "https://s3.amazonaws.com/f5-cft/f5-existing-stack-same-az-cluster-payg-2nic-bigip.template"
      template_parameters:
        group:  "f5group"
        declarationUrl:  "none"
        Vpc: "{{ vpc_id }}"
        managementSubnetAz1:  "{{ vpc_subnet_ids.mgmt_a }}"
        subnet1Az1:  "{{ vpc_subnet_ids.traffic_a }}"
        restrictedSrcAddress: "0.0.0.0/0"
        restrictedSrcAddressApp: "0.0.0.0/0"
        sshKey:  "{{ sshKey }}"
        environment:  "f5env"
        application:  "f5app"
        customImageId:  "OPTIONAL"
        imageName:  "Best25Mbps"
        ntpServer:  "0.pool.ntp.org"
        costcenter:  "SALES EMEA-UK 4261"
        owner:  "{{ uk_se_name }}"
        timezone:  "UTC"
        instanceType:  "m5.xlarge"
        allowUsageAnalytics:  "Yes"
      tags:
        Stack: "ansible-cft-failover-samenet-api-exist-payg"
        UK-SE: "{{ uk_se_name }}"
